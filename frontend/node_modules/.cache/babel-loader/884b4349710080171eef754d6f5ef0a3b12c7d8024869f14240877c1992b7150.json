{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\student\\\\frontend\\\\src\\\\components\\\\StudentForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminAuth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentForgotPassword = () => {\n  _s();\n  const [studentId, setStudentId] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!studentId || !email) {\n      setMessage('Please enter Student ID and Email.');\n      return;\n    }\n    setLoading(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://localhost:5000/api/student/forgot-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          studentId,\n          email\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMessage(data.message || 'If the details are correct, you will receive password reset instructions.');\n      } else {\n        const detail = data.detail ? ` (${data.detail})` : '';\n        setMessage((data.message || 'Unable to process request.') + detail);\n      }\n    } catch (err) {\n      console.error('Forgot password request failed:', err);\n      setMessage('Server error. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"auth-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"studentId\",\n          placeholder: \"Student ID\",\n          value: studentId,\n          onChange: e => setStudentId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? 'Processing...' : 'Reset Password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"secondary\",\n            onClick: () => navigate('/student'),\n            children: \"Back to Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentForgotPassword, \"6HNGQd9N6pfTWxfWg+lKMWpw7pQ=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentForgotPassword;\nexport default StudentForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"StudentForgotPassword\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","StudentForgotPassword","_s","studentId","setStudentId","email","setEmail","message","setMessage","loading","setLoading","navigate","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","detail","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","value","onChange","target","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/student/frontend/src/components/StudentForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './AdminAuth.css';\r\n\r\nconst StudentForgotPassword = () => {\r\n  const [studentId, setStudentId] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!studentId || !email) {\r\n      setMessage('Please enter Student ID and Email.');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setMessage('');\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/student/forgot-password', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ studentId, email })\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setMessage(data.message || 'If the details are correct, you will receive password reset instructions.');\r\n      } else {\r\n        const detail = data.detail ? ` (${data.detail})` : '';\r\n        setMessage((data.message || 'Unable to process request.') + detail);\r\n      }\r\n    } catch (err) {\r\n      console.error('Forgot password request failed:', err);\r\n      setMessage('Server error. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Forgot Password</h2>\r\n        <form onSubmit={handleSubmit} className=\"auth-form\">\r\n          <input type=\"text\" name=\"studentId\" placeholder=\"Student ID\" value={studentId} onChange={e => setStudentId(e.target.value)} />\r\n          <input type=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n            {message && <div className=\"info\">{message}</div>}\r\n            <div className=\"auth-buttons\">\r\n              <button type=\"submit\" disabled={loading}>{loading ? 'Processing...' : 'Reset Password'}</button>\r\n              <button type=\"button\" className=\"secondary\" onClick={() => navigate('/student')}>Back to Sign In</button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}