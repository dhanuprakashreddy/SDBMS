{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\student\\\\frontend\\\\src\\\\components\\\\AdminForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminAuth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminForgotPassword = () => {\n  _s();\n  const [adminId, setAdminId] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!adminId || !email) {\n      setMessage('Please enter Admin ID and Email.');\n      return;\n    }\n    setLoading(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://localhost:5000/api/admin/forgot-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          adminId,\n          email\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMessage(data.message || 'If the details are correct, you will receive password reset instructions.');\n      } else {\n        setMessage(data.message || 'Unable to process request.');\n      }\n    } catch (err) {\n      setMessage('Server error. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"auth-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"adminId\",\n          placeholder: \"Admin ID\",\n          value: adminId,\n          onChange: e => setAdminId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? 'Processing...' : 'Reset Password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"secondary\",\n            onClick: () => navigate('/admin/login'),\n            children: \"Back to Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminForgotPassword, \"4IRDhdJixzM5x7ckDnchnBQskK8=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminForgotPassword;\nexport default AdminForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"AdminForgotPassword\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","AdminForgotPassword","_s","adminId","setAdminId","email","setEmail","message","setMessage","loading","setLoading","navigate","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","value","onChange","target","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/student/frontend/src/components/AdminForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './AdminAuth.css';\r\n\r\nconst AdminForgotPassword = () => {\r\n  const [adminId, setAdminId] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!adminId || !email) {\r\n      setMessage('Please enter Admin ID and Email.');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setMessage('');\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/admin/forgot-password', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ adminId, email })\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setMessage(data.message || 'If the details are correct, you will receive password reset instructions.');\r\n      } else {\r\n        setMessage(data.message || 'Unable to process request.');\r\n      }\r\n    } catch (err) {\r\n      setMessage('Server error. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Forgot Password</h2>\r\n        <form onSubmit={handleSubmit} className=\"auth-form\">\r\n          <input type=\"text\" name=\"adminId\" placeholder=\"Admin ID\" value={adminId} onChange={e => setAdminId(e.target.value)} />\r\n          <input type=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n            {message && <div className=\"info\">{message}</div>}\r\n            <div className=\"auth-buttons\">\r\n              <button type=\"submit\" disabled={loading}>{loading ? 'Processing...' : 'Reset Password'}</button>\r\n              <button type=\"button\" className=\"secondary\" onClick={() => navigate('/admin/login')}>Back to Sign In</button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}